'use client';

import { useState, useEffect } from 'react';
import { QRCodeSVG } from 'qrcode.react';

export default function Home() {
  const [status, setStatus] = useState('disconnected');
  const [qr, setQr] = useState(null);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    const checkStatus = async () => {
      try {
        const res = await fetch('/api/whatsapp');
        const data = await res.json();
        setStatus(data.status);
        setQr(data.qr);
      } catch (error) {
        console.error('Failed to check status:', error);
        setStatus('error');
      }
    };

    const interval = setInterval(checkStatus, 1000);
    return () => clearInterval(interval);
  }, []);

  const handleConnect = async () => {
    setIsLoading(true);
    try {
      await fetch('/api/whatsapp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action: 'initialize' })
      });
    } catch (error) {
      console.error('Failed to connect:', error);
      setStatus('error');
    } finally {
      setIsLoading(false);
    }
  };

  const handleDeleteSession = async () => {
    setIsLoading(true);
    try {
      await fetch('/api/whatsapp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action: 'delete-session' })
      });
    } catch (error) {
      console.error('Failed to delete session:', error);
      setStatus('error');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-600 via-purple-800 to-gray-900 text-white p-8">
      <div className="max-w-4xl mx-auto">
        <div className="bg-white/10 backdrop-blur-lg rounded-2xl p-8 shadow-2xl transform hover:scale-[1.01] transition-transform duration-300 border border-white/20">
          <h1 className="text-4xl font-bold mb-8 text-center animate-fade-in bg-gradient-to-r from-white via-purple-200 to-white bg-clip-text text-transparent">
            WhatsApp Gateway
          </h1>
          
          <div className="space-y-8">
            <div className="flex justify-center space-x-4">
              <button
                onClick={handleConnect}
                disabled={isLoading}
                className={`px-6 py-3 bg-green-500/80 backdrop-blur-sm rounded-lg hover:bg-green-600 transform hover:scale-105 transition-all duration-300 shadow-lg shadow-green-500/20 hover:shadow-green-500/40 flex items-center gap-2 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}
              >
                {isLoading ? (
                  <>
                    <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                    Processing...
                  </>
                ) : 'Connect WhatsApp'}
              </button>
              <button
                onClick={handleDeleteSession}
                disabled={isLoading}
                className={`px-6 py-3 bg-red-500/80 backdrop-blur-sm rounded-lg hover:bg-red-600 transform hover:scale-105 transition-all duration-300 shadow-lg shadow-red-500/20 hover:shadow-red-500/40 flex items-center gap-2 ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}
              >
                {isLoading ? (
                  <>
                    <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                    Processing...
                  </>
                ) : 'Delete Session'}
              </button>
            </div>

            <div className="flex flex-col items-center space-y-4">
              <div className="text-xl font-semibold bg-white/5 px-4 py-2 rounded-full backdrop-blur-sm border border-white/10 flex items-center gap-2">
                Status: 
                <span className={`
                  ${status === 'connected' ? 'text-green-400' : ''}
                  ${status === 'disconnected' ? 'text-red-400' : ''}
                  ${status === 'qr' ? 'text-yellow-400' : ''}
                  ${status === 'error' ? 'text-red-600' : ''}
                  flex items-center gap-2
                `}>
                  <div className={`w-3 h-3 rounded-full ${status === 'connected' ? 'bg-green-400' : ''} ${status === 'disconnected' ? 'bg-red-400' : ''} ${status === 'qr' ? 'bg-yellow-400' : ''} ${status === 'error' ? 'bg-red-600' : ''} animate-pulse`}></div>
                  {status}
                </span>
              </div>
              
              {qr && status === 'qr' && (
                <div className="bg-white/90 p-6 rounded-xl animate-fade-in shadow-2xl shadow-purple-500/20 hover:shadow-purple-500/40 transition-all duration-300">
                  <QRCodeSVG value={qr} size={256} />
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}